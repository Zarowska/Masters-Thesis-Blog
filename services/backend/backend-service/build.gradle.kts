import org.springframework.boot.gradle.tasks.bundling.BootJar

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("blog.java.application.conventions")
}

tasks.named<BootJar>("bootJar") {
    archiveBaseName.set("backend-service-app")
}

dependencies {
    implementation(project(":services:backend:shared"))
    implementation(project(":services:backend:api"))
    implementation(project(":services:backend:domain"))
    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude(group = "org.springframework.boot", module = "spring-boot-starter-tomcat")
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")

//    implementation("org.springframework.boot:spring-boot-starter-graphql")
//    implementation("org.springframework.boot:spring-boot-starter-oauth2-client")
//    implementation("org.springframework.boot:spring-boot-starter-security")
//    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server")

    implementation("org.springframework.boot:spring-boot-starter-actuator")

    implementation("io.micrometer:micrometer-tracing-bridge-brave")
//    compileOnly("org.projectlombok:lombok")
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    runtimeOnly("io.micrometer:micrometer-registry-prometheus")

//    annotationProcessor("org.projectlombok:lombok")

//    testCompileOnly("org.projectlombok:lombok")
//    testAnnotationProcessor("org.projectlombok:lombok")

    testImplementation(project(":services:backend:client"))
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.boot:spring-boot-testcontainers")
    testImplementation("org.springframework:spring-webflux")
    testImplementation("org.springframework.graphql:spring-graphql-test")
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:postgresql")

    compileOnly("io.swagger.core.v3:swagger-annotations:2.2.19")
    testCompileOnly("io.swagger.core.v3:swagger-annotations:2.2.19")
}

application {
    // Define the main class for the application.
    mainClass.set("com.zarowska.blog.app.App")
}
