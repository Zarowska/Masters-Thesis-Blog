version: '3.9'

services:
  app:
    build: .
    image: my-spring-boot-app:latest
    environment:
      # Pass in your active Spring profiles (default is "docker")
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-"docker,data-import"}
      # Configure datasource parameters pointing to the db service
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-mydb}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-password}
    depends_on:
      - db
    # We removed the port mapping since Nginx will handle external traffic.

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mydb}
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"  # Exposing both HTTP and HTTPS externally
    volumes:
      - ./ops/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro  # Your custom config
      - nginx_certbot_certs:/etc/letsencrypt       # Certificates storage
      - nginx_certbot_challenges:/var/www/certbot     # ACME challenge files
    depends_on:
      - app

  # Certbot service to handle certificate renewal
  certbot:
    image: certbot/certbot
    volumes:
      - nginx_certbot_certs:/etc/letsencrypt
      - nginx_certbot_challenges:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"

volumes:
  postgres_data:
  nginx_certbot_certs:
  nginx_certbot_challenges:
